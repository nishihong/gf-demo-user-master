// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT. Created at 2022-06-06 15:21:14
// ==========================================================================

package internal

import (
	"context"
	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// SoftProvinceDao is the data access object for table yjs_soft_province.
type SoftProvinceDao struct {
	table   string              // table is the underlying table name of the DAO.
	group   string              // group is the database configuration group name of current DAO.
	columns SoftProvinceColumns // columns contains all the column names of Table for convenient usage.
}

// SoftProvinceColumns defines and stores column names for table yjs_soft_province.
type SoftProvinceColumns struct {
	Id           string //
	SoftId       string // 主程序id
	Province     string // 省份
	ProvinceType string // 1、省级配置，2、市级配置
	City         string // 城市
	CreatedAt    string //
	UpdatedAt    string //
}

//  softProvinceColumns holds the columns for table yjs_soft_province.
var softProvinceColumns = SoftProvinceColumns{
	Id:           "id",
	SoftId:       "soft_id",
	Province:     "province",
	ProvinceType: "province_type",
	City:         "city",
	CreatedAt:    "created_at",
	UpdatedAt:    "updated_at",
}

// NewSoftProvinceDao creates and returns a new DAO object for table data access.
func NewSoftProvinceDao() *SoftProvinceDao {
	return &SoftProvinceDao{
		group:   "default",
		table:   "yjs_soft_province",
		columns: softProvinceColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *SoftProvinceDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *SoftProvinceDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *SoftProvinceDao) Columns() SoftProvinceColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *SoftProvinceDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *SoftProvinceDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *SoftProvinceDao) Transaction(ctx context.Context, f func(ctx context.Context, tx *gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
