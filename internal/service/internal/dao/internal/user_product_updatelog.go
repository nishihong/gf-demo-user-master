// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT. Created at 2022-06-06 15:21:14
// ==========================================================================

package internal

import (
	"context"
	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// UserProductUpdatelogDao is the data access object for table yjs_user_product_updatelog.
type UserProductUpdatelogDao struct {
	table   string                      // table is the underlying table name of the DAO.
	group   string                      // group is the database configuration group name of current DAO.
	columns UserProductUpdatelogColumns // columns contains all the column names of Table for convenient usage.
}

// UserProductUpdatelogColumns defines and stores column names for table yjs_user_product_updatelog.
type UserProductUpdatelogColumns struct {
	Id            string //
	UserId        string // 用户id
	UserAccountId string // 账单id
	UserProductId string // 用户产品id
	UserSerialId  string // 用户序列号表id
	Type          string // 1是续费，2是升级,3是购买
	OldData       string // 旧数据
	NewData       string // 新数据
	Money         string // 操作价格
	CreatedAt     string //
	UpdatedAt     string //
}

//  userProductUpdatelogColumns holds the columns for table yjs_user_product_updatelog.
var userProductUpdatelogColumns = UserProductUpdatelogColumns{
	Id:            "id",
	UserId:        "user_id",
	UserAccountId: "user_account_id",
	UserProductId: "user_product_id",
	UserSerialId:  "user_serial_id",
	Type:          "type",
	OldData:       "old_data",
	NewData:       "new_data",
	Money:         "money",
	CreatedAt:     "created_at",
	UpdatedAt:     "updated_at",
}

// NewUserProductUpdatelogDao creates and returns a new DAO object for table data access.
func NewUserProductUpdatelogDao() *UserProductUpdatelogDao {
	return &UserProductUpdatelogDao{
		group:   "default",
		table:   "yjs_user_product_updatelog",
		columns: userProductUpdatelogColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *UserProductUpdatelogDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *UserProductUpdatelogDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *UserProductUpdatelogDao) Columns() UserProductUpdatelogColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *UserProductUpdatelogDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *UserProductUpdatelogDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *UserProductUpdatelogDao) Transaction(ctx context.Context, f func(ctx context.Context, tx *gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
