// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT. Created at 2022-06-06 15:21:14
// ==========================================================================

package internal

import (
	"context"
	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// PreferentialStrategyDao is the data access object for table yjs_preferential_strategy.
type PreferentialStrategyDao struct {
	table   string                      // table is the underlying table name of the DAO.
	group   string                      // group is the database configuration group name of current DAO.
	columns PreferentialStrategyColumns // columns contains all the column names of Table for convenient usage.
}

// PreferentialStrategyColumns defines and stores column names for table yjs_preferential_strategy.
type PreferentialStrategyColumns struct {
	Id                string //
	Type              string // 类型 1 购买 2 续费
	Operator          string // 操作人
	PreferentialHalf  string // 半年折扣
	PreferentialOne   string // 一年折扣
	PreferentialTwo   string // 两年折扣
	PreferentialThree string // 三年折扣
	CreatedAt         string //
	UpdatedAt         string //
}

//  preferentialStrategyColumns holds the columns for table yjs_preferential_strategy.
var preferentialStrategyColumns = PreferentialStrategyColumns{
	Id:                "id",
	Type:              "type",
	Operator:          "operator",
	PreferentialHalf:  "preferential_half",
	PreferentialOne:   "preferential_one",
	PreferentialTwo:   "preferential_two",
	PreferentialThree: "preferential_three",
	CreatedAt:         "created_at",
	UpdatedAt:         "updated_at",
}

// NewPreferentialStrategyDao creates and returns a new DAO object for table data access.
func NewPreferentialStrategyDao() *PreferentialStrategyDao {
	return &PreferentialStrategyDao{
		group:   "default",
		table:   "yjs_preferential_strategy",
		columns: preferentialStrategyColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *PreferentialStrategyDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *PreferentialStrategyDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *PreferentialStrategyDao) Columns() PreferentialStrategyColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *PreferentialStrategyDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *PreferentialStrategyDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *PreferentialStrategyDao) Transaction(ctx context.Context, f func(ctx context.Context, tx *gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
