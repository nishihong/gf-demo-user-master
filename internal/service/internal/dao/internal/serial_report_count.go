// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT. Created at 2022-06-06 15:21:14
// ==========================================================================

package internal

import (
	"context"
	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// SerialReportCountDao is the data access object for table yjs_serial_report_count.
type SerialReportCountDao struct {
	table   string                   // table is the underlying table name of the DAO.
	group   string                   // group is the database configuration group name of current DAO.
	columns SerialReportCountColumns // columns contains all the column names of Table for convenient usage.
}

// SerialReportCountColumns defines and stores column names for table yjs_serial_report_count.
type SerialReportCountColumns struct {
	Id               string //
	ReportId         string // 序列号
	CountUpLink      string //
	CountDownLink    string //
	CountConnections string //
	Status           string //
	CreatedAt        string //
}

//  serialReportCountColumns holds the columns for table yjs_serial_report_count.
var serialReportCountColumns = SerialReportCountColumns{
	Id:               "id",
	ReportId:         "report_id",
	CountUpLink:      "count_up_link",
	CountDownLink:    "count_down_link",
	CountConnections: "count_connections",
	Status:           "status",
	CreatedAt:        "created_at",
}

// NewSerialReportCountDao creates and returns a new DAO object for table data access.
func NewSerialReportCountDao() *SerialReportCountDao {
	return &SerialReportCountDao{
		group:   "default",
		table:   "yjs_serial_report_count",
		columns: serialReportCountColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *SerialReportCountDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *SerialReportCountDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *SerialReportCountDao) Columns() SerialReportCountColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *SerialReportCountDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *SerialReportCountDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *SerialReportCountDao) Transaction(ctx context.Context, f func(ctx context.Context, tx *gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
