// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT. Created at 2022-06-06 15:21:14
// ==========================================================================

package internal

import (
	"context"
	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// NoticetDao is the data access object for table yjs_noticet.
type NoticetDao struct {
	table   string         // table is the underlying table name of the DAO.
	group   string         // group is the database configuration group name of current DAO.
	columns NoticetColumns // columns contains all the column names of Table for convenient usage.
}

// NoticetColumns defines and stores column names for table yjs_noticet.
type NoticetColumns struct {
	Id            string //
	Type          string // 1是公告，2是更新日志
	Title         string // 标题
	Content       string // 内容
	AdminId       string // 发布人ID
	AdminSurename string // 发布人姓名
	CreatedAt     string //
	UpdatedAt     string //
}

//  noticetColumns holds the columns for table yjs_noticet.
var noticetColumns = NoticetColumns{
	Id:            "id",
	Type:          "type",
	Title:         "title",
	Content:       "content",
	AdminId:       "admin_id",
	AdminSurename: "admin_surename",
	CreatedAt:     "created_at",
	UpdatedAt:     "updated_at",
}

// NewNoticetDao creates and returns a new DAO object for table data access.
func NewNoticetDao() *NoticetDao {
	return &NoticetDao{
		group:   "default",
		table:   "yjs_noticet",
		columns: noticetColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *NoticetDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *NoticetDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *NoticetDao) Columns() NoticetColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *NoticetDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *NoticetDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *NoticetDao) Transaction(ctx context.Context, f func(ctx context.Context, tx *gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
