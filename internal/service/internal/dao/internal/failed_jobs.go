// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT. Created at 2022-06-06 15:21:14
// ==========================================================================

package internal

import (
	"context"
	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// FailedJobsDao is the data access object for table yjs_failed_jobs.
type FailedJobsDao struct {
	table   string            // table is the underlying table name of the DAO.
	group   string            // group is the database configuration group name of current DAO.
	columns FailedJobsColumns // columns contains all the column names of Table for convenient usage.
}

// FailedJobsColumns defines and stores column names for table yjs_failed_jobs.
type FailedJobsColumns struct {
	Id         string //
	Connection string //
	Queue      string //
	Payload    string //
	Exception  string //
	FailedAt   string //
}

//  failedJobsColumns holds the columns for table yjs_failed_jobs.
var failedJobsColumns = FailedJobsColumns{
	Id:         "id",
	Connection: "connection",
	Queue:      "queue",
	Payload:    "payload",
	Exception:  "exception",
	FailedAt:   "failed_at",
}

// NewFailedJobsDao creates and returns a new DAO object for table data access.
func NewFailedJobsDao() *FailedJobsDao {
	return &FailedJobsDao{
		group:   "default",
		table:   "yjs_failed_jobs",
		columns: failedJobsColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *FailedJobsDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *FailedJobsDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *FailedJobsDao) Columns() FailedJobsColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *FailedJobsDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *FailedJobsDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *FailedJobsDao) Transaction(ctx context.Context, f func(ctx context.Context, tx *gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
